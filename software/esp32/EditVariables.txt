/*
  ledcWrite_RGB.ino
  Runs through the full 255 color spectrum for an rgb led
  Demonstrate ledcWrite functionality for driving leds with PWM on ESP32

  This example code is in the public domain.

  Some basic modifications were made by vseven, mostly commenting.
*/
#define in4 34   //GPIO 34
int val = 0;
int timee = 0;
int processing = 1;

//int _id = 1;

// Set up the rgb led names
uint8_t ledR_status = 13;  //Red_status
uint8_t ledG_status = 12;  //Green_status
uint8_t ledB_status = 33;  //Blue_status

uint8_t ledR_power = 14  //GPIO 14    Red_power
uint8_t ledR_power = 15  //GPIO 15    Green_power
uint8_t ledR_power = 21  //GPIO 21    Blue_power

const int buzzer = 4; //buzzer to arduino pin 4
uint8_t ledArray[3] = {1, 2, 3}; // three led channels
const boolean invert = true; // set true if common anode, false if common cathode
uint8_t color = 0;          // a value from 0 to 255 representing the hue
uint32_t R, G, B;           // the Red Green and Blue color components
uint8_t brightness = 255;  // 255 is maximum brightness, but can be changed.  Might need 256 for common anode to fully turn off.

// the setup routine runs once when you press reset:
void setup()
{
  Serial.begin(115200);
  delay(10);
  
  // Initialize channels
  // channels 0-15, resolution 1-16 bits, freq limits depend on resolution
  // ledcSetup(uint8_t channel, uint32_t freq, uint8_t resolution_bits);
  ledcSetup(1, 12000, 8); // 12 kHz PWM, 8-bit resolution
  ledcSetup(2, 12000, 8);
  ledcSetup(3, 12000, 8);

  delay(10);
  
}

// void loop runs over and over again
void loop() 
{  
  // If your RGB LED turns off instead of on here you should check if the LED is common anode or cathode.
  // If it doesn't fully turn off and is common anode try using 256.
  //RGB <(LED No., Brightness)>
  //LED No.: 1 = Red, 2 = Green, 3 = Blue.

  //Uncomment to test RGB
  /*
    Serial.println("2 seconds delay between cycles.");
    Serial.println("Red on.");
    ledcWrite(1, 255);    //Red on
    delay(2000);
    Serial.println("Red off.");
    ledcWrite(1, 0);      //Red off
    delay(2000);

    Serial.println("Green on.");
    ledcWrite(2, 255);    //Green on
    delay(2000);
    Serial.println("Green off.");
    ledcWrite(2, 0);      //Green off
    delay(2000);

    Serial.println("Blue on.");
    ledcWrite(3, 255);    //Blue on
    delay(2000);
    Serial.println("Red off.");
    ledcWrite(3, 0);      // Blue off
    delay(500);
  */
  
  //Default state
  default_state();

  //Test authorization
  while(val == 1){
  authorize_student();
  }
 
}

  void default_state() {
  Serial.println("State: Idle.");
  ledcWrite(1, 255); //Red
  delay(2000);
}

  void authorize_student()
  {
  
    Serial.println("Student authorized");
    ledcWrite(2, 255); //Green on

    delay(100);
    //Buzzer beep once
    digitalWrite(buzzer, HIGH);
    Serial.println("buzz briefly");
    delay(100);
    digitalWrite(buzzer, LOW);

    //Buzzer beep 3 times
    for (int i = 0; i < 3; i++) {
      digitalWrite(buzzer, HIGH);
      delay(100);
      digitalWrite(buzzer, LOW);
      delay(900);
    }
    
    Serial.println("TEST: buzzed 3 times successfully");
    delay(5000);
  }
  

  void uauthorize_student(){
      
    Serial.println("Student uauthorized.");
    ledcWrite(2, 0); //Green off

    delay(100);
    //Buzzer beep once
    digitalWrite(buzzer, HIGH);
    Serial.println("buzz briefly");
    delay(100);
    digitalWrite(buzzer, LOW);

    //Buzzer beep 3 times
    for (int i = 0; i < 3; i++) {
      digitalWrite(buzzer, HIGH);
      delay(100);
      digitalWrite(buzzer, LOW);
      delay(900);
    }
    
    Serial.println("TEST: buzzed 3 times successfully");
    delay(5000);
}

void authorize_manager()
  {
  
    Serial.println("Manager authorized.");
    ledcWrite(2, 255); //Green on

    delay(100);
    //Buzzer beep once
    digitalWrite(buzzer, HIGH);
    Serial.println("buzz briefly");
    delay(100);
    digitalWrite(buzzer, LOW);

    //Buzzer beep 3 times
    for (int i = 0; i < 3; i++) {
      digitalWrite(buzzer, HIGH);
      delay(250);
      digitalWrite(buzzer, LOW);
      delay(900);
    }
    
    Serial.println("TEST: buzzed 3 times successfully");
    delay(5000);
  }

  void enroll_begin()
  {
    while(processing){
    Serial.println("Enrolling user...");
    for(;;) //loop forever
      {
      ledcWrite(3, 255); //Blue on
      delay(500);
      ledcWrite(3, 0); //Blue off
      delay(500);
      }
    }
    
    default_state(); // idle
 }